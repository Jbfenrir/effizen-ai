import { adviceEngine } from '../services/adviceEngine';
import type { DailyEntry } from '../types';
import type { AnalyticsData } from './dataAnalytics';

export interface SmartAdvice {
  diagnosis: string;
  recommendation: string;
  color: string;
  icon: string;
}

/**
 * G√©n√©rateur de conseils intelligent bas√© sur le syst√®me test-advice
 */
export const generateSmartAdvice = async (
  entries: DailyEntry[], 
  analytics: AnalyticsData
): Promise<SmartAdvice> => {
  
  // Si pas de donn√©es, conseil par d√©faut
  if (!analytics.dataAvailable) {
    return {
      diagnosis: "Aucune donn√©e disponible pour cette p√©riode.",
      recommendation: "Commencez par saisir vos informations quotidiennes pour recevoir des conseils personnalis√©s bas√©s sur nos expertises en bien-√™tre au travail.",
      color: 'bg-blue-100 border-l-4 border-blue-500',
      icon: 'üìä'
    };
  }

  try {
    // G√©n√©rer une analyse avec le moteur de conseils
    const userId = "employee-dashboard"; // ID fictif pour le dashboard
    const analysis = await adviceEngine.analyzeUserData(userId, entries);
    
    // Si des r√®gles expertes sont d√©clench√©es, utiliser le syst√®me intelligent
    if (analysis.triggeredRules.length > 0) {
      const topRule = analysis.triggeredRules[0]; // R√®gle la plus prioritaire
      const advice = topRule.rule.advice;
      
      // Cr√©er un diagnostic court (2-3 lignes)
      const diagnosis = `${advice.problem}`;
      
      // Cr√©er une recommandation pratique (2-5 lignes selon la gravit√©)
      const immediateActions = advice.actions
        .filter(action => action.category === 'immediate')
        .slice(0, 2); // Max 2 actions imm√©diates
        
      const dailyActions = advice.actions
        .filter(action => action.category === 'daily')
        .slice(0, 1); // 1 action quotidienne
      
      let recommendationLines = [];
      
      // Actions imm√©diates
      immediateActions.forEach(action => {
        recommendationLines.push(`üéØ ${action.title}: ${action.description}`);
      });
      
      // Action quotidienne
      if (dailyActions.length > 0) {
        recommendationLines.push(`üìÖ ${dailyActions[0].title}: ${dailyActions[0].description}`);
      }
      
      // Ressource utile si disponible
      if (advice.resources.length > 0) {
        const resource = advice.resources[0];
        recommendationLines.push(`üí° ${resource.title}: ${resource.description}`);
      }
      
      const recommendation = recommendationLines.join('\n');
      
      // Couleur selon la s√©v√©rit√©
      let color = 'bg-green-100 border-l-4 border-green-500';
      let icon = 'üåü';
      
      switch (topRule.rule.severity) {
        case 'critique':
          color = 'bg-red-100 border-l-4 border-red-500';
          icon = 'üö®';
          break;
        case 'alerte':
          color = 'bg-orange-100 border-l-4 border-orange-500'; 
          icon = '‚ö†Ô∏è';
          break;
        case 'attention':
          color = 'bg-yellow-100 border-l-4 border-yellow-500';
          icon = 'üí°';
          break;
      }
      
      return { diagnosis, recommendation, color, icon };
    }
    
  } catch (error) {
    console.warn('Erreur lors de la g√©n√©ration des conseils intelligents:', error);
  }
  
  // Fallback : conseils bas√©s sur les scores analytiques mais avec format diagnostic/conseils
  return generateEnhancedFallbackAdvice(analytics);
};

/**
 * G√©n√®re des conseils am√©lior√©s avec format diagnostic/conseils bas√©s sur les scores
 */
const generateEnhancedFallbackAdvice = (analytics: AnalyticsData): SmartAdvice => {
  const { wellbeingScore, sleepScore, energyScore, breaksScore, optimizationScore } = analytics;
  
  // Identifier les 2 domaines les plus probl√©matiques
  const scores = [
    { domain: 'sommeil', score: sleepScore, label: 'Sommeil' },
    { domain: 'energy', score: energyScore, label: '√ânergie' },
    { domain: 'breaks', score: breaksScore, label: '√âquilibre' },
    { domain: 'optimization', score: optimizationScore, label: 'Optimisation' }
  ];
  
  const lowScores = scores.filter(s => s.score < 60).sort((a, b) => a.score - b.score);
  
  // Excellent √©tat g√©n√©ral
  if (wellbeingScore >= 75 && optimizationScore >= 70) {
    return {
      diagnosis: `Bilan optimal : Bien-√™tre global √† ${wellbeingScore}/100 et optimisation du temps √† ${optimizationScore}/100. Votre √©quilibre professionnel est exemplaire.`,
      recommendation: `üéâ Excellence maintenue !\nüí™ Vos habitudes actuelles sont optimales - maintenez ce rythme.\nüìä Partagez vos bonnes pratiques avec votre √©quipe.`,
      color: 'bg-green-100 border-l-4 border-green-500',
      icon: 'üåü'
    };
  }
  
  // Probl√®mes d√©tect√©s - Format diagnostic expert
  if (lowScores.length > 0) {
    const primaryIssue = lowScores[0];
    const secondaryIssue = lowScores.length > 1 ? lowScores[1] : null;
    
    let diagnosis = `Analyse comportementale : D√©ficit principal d√©tect√© sur "${primaryIssue.label}" (${primaryIssue.score}/100)`;
    if (secondaryIssue) {
      diagnosis += ` avec impact secondaire sur "${secondaryIssue.label}" (${secondaryIssue.score}/100)`;
    }
    diagnosis += `. Score bien-√™tre global : ${wellbeingScore}/100.`;
    
    let recommendations = [];
    
    // Conseils sp√©cialis√©s selon le domaine prioritaire
    switch (primaryIssue.domain) {
      case 'sommeil':
        recommendations.push("üåô Priorit√© absolue : R√©gularisez votre cycle de sommeil (coucher/lever √† heures fixes)");
        recommendations.push("üì± Action imm√©diate : Pas d'√©crans 1h avant le coucher");
        break;
      case 'energy':
        recommendations.push("‚ö° Focus √©nergie : Identifiez vos pics naturels d'√©nergie dans la journ√©e");
        recommendations.push("üçé Nutrition : Privil√©giez des repas l√©gers et r√©guliers");
        break;
      case 'breaks':
        recommendations.push("‚è∏Ô∏è Protocole micro-pauses : 5 minutes toutes les heures de travail intense");
        recommendations.push("üßò Technique imm√©diate : Respiration 4-7-8 lors des moments de stress");
        break;
      case 'optimization':
        recommendations.push("üéØ M√©thode Eisenhower : Classez vos t√¢ches par urgence/importance");
        recommendations.push("‚è∞ Technique Pomodoro : 25 min concentration + 5 min pause");
        break;
    }
    
    // Conseil de synergie si probl√®me secondaire
    if (secondaryIssue) {
      recommendations.push(`üí° Synergie : Am√©liorer votre ${primaryIssue.label.toLowerCase()} aura un effet positif sur votre ${secondaryIssue.label.toLowerCase()}`);
    }
    
    const recommendation = recommendations.join('\n');
    
    // Couleur selon la gravit√©
    let color = 'bg-orange-100 border-l-4 border-orange-500';
    let icon = '‚ö†Ô∏è';
    
    if (wellbeingScore < 40) {
      color = 'bg-red-100 border-l-4 border-red-500';
      icon = 'üö®';
    } else if (wellbeingScore < 60) {
      color = 'bg-yellow-100 border-l-4 border-yellow-500';
      icon = 'üí°';
    }
    
    return { diagnosis, recommendation, color, icon };
  }
  
  // √âtat moyen - potentiel d'am√©lioration
  return {
    diagnosis: `Profil √©quilibr√© : Bien-√™tre √† ${wellbeingScore}/100 avec marge d'optimisation identifi√©e. Vos fondamentaux sont solides.`,
    recommendation: `üìà Strat√©gie d'am√©lioration progressive :\nüéØ Concentrez-vous sur vos scores les plus bas des graphiques ci-dessus\nüîÑ Adoptez une approche par √©tapes (1 changement par semaine)`,
    color: 'bg-blue-100 border-l-4 border-blue-500',
    icon: 'üìä'
  };
};

/**
 * G√©n√®re des conseils de base bas√©s sur les scores analytiques (ancienne version)
 */
const generateFallbackAdvice = (analytics: AnalyticsData): SmartAdvice => {
  const { wellbeingScore, sleepScore, energyScore, breaksScore, optimizationScore } = analytics;
  
  // Tout va bien
  if (wellbeingScore >= 75 && optimizationScore >= 70) {
    return {
      diagnosis: `Excellent ! Votre bien-√™tre est √† ${wellbeingScore}/100 et votre optimisation √† ${optimizationScore}/100.`,
      recommendation: `üéâ Continuez sur cette lanc√©e ! Votre √©quilibre actuel est optimal.\nüí™ Maintenez vos bonnes habitudes de sommeil, d'√©nergie et de gestion du temps.`,
      color: 'bg-green-100 border-l-4 border-green-500',
      icon: 'üåü'
    };
  }
  
  // Probl√®mes d√©tect√©s
  const lowAreas = [];
  if (sleepScore < 60) lowAreas.push('sommeil');
  if (energyScore < 60) lowAreas.push('√©nergie'); 
  if (breaksScore < 60) lowAreas.push('√©quilibre');
  if (optimizationScore < 60) lowAreas.push('optimisation du temps');
  
  if (lowAreas.length > 0) {
    const diagnosis = `Scores faibles d√©tect√©s sur ${lowAreas.length} dimension(s) : ${lowAreas.join(', ')}. Bien-√™tre global √† ${wellbeingScore}/100.`;
    
    let recommendations = [];
    
    if (sleepScore < 60) {
      recommendations.push("üò¥ Sommeil : Visez 7-8h de sommeil r√©gulier avec un coucher √† heure fixe");
    }
    if (energyScore < 60) {
      recommendations.push("‚ö° √ânergie : Prenez 3 pauses de 5 minutes dans votre journ√©e");
    }
    if (breaksScore < 60) {
      recommendations.push("üßò √âquilibre : Int√©grez m√©ditation ou pauses aux 4 cr√©neaux quotidiens");
    }
    if (optimizationScore < 60) {
      recommendations.push("üéØ Focus : Concentrez 70% de votre temps sur vos t√¢ches prioritaires");
    }
    
    const recommendation = recommendations.slice(0, 3).join('\n'); // Max 3 recommandations
    
    return {
      diagnosis,
      recommendation,
      color: 'bg-red-100 border-l-4 border-red-500',
      icon: '‚ö†Ô∏è'
    };
  }
  
  // Scores moyens
  return {
    diagnosis: `Bien-√™tre √† ${wellbeingScore}/100. Des am√©liorations sont possibles pour optimiser votre √©quilibre.`,
    recommendation: `üìà Concentrez-vous sur vos points faibles identifi√©s dans les graphiques.\nüéØ Analysez vos patterns pour identifier les moments d'am√©lioration.`,
    color: 'bg-yellow-100 border-l-4 border-yellow-500',
    icon: 'üí°'
  };
};